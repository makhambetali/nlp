# from fastapi import FastAPI, Query
# from annoy import AnnoyIndex
# from sentence_transformers import SentenceTransformer
# import numpy as np

# app = FastAPI()

# # –ó–∞–¥–∞–µ–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
# VECTOR_DIMENSION = 384  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å "all-MiniLM-L6-v2"
# annoy_index = AnnoyIndex(VECTOR_DIMENSION, 'angular')

# # –ó–∞–≥—Ä—É–∂–∞–µ–º NLP-–º–æ–¥–µ–ª—å –¥–ª—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
# model = SentenceTransformer("sentence-transformers/all-MiniLM-L6-v2")

# # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–∞—á–µ–π –∏ –∫–ª–∏–Ω–∏–∫ (–ø—Ä–∏–º–µ—Ä)
# data = [
#     {"id": 0, "name": "–î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤, —Ç–µ—Ä–∞–ø–µ–≤—Ç", "description": "–õ–µ—á–∏—Ç –ø—Ä–æ—Å—Ç—É–¥—É, –≥—Ä–∏–ø–ø, –û–†–í–ò, –∞–Ω–≥–∏–Ω—É, –±—Ä–æ–Ω—Ö–∏—Ç."},
#     {"id": 1, "name": "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä '–ó–¥–æ—Ä–æ–≤—å–µ'", "description": "–ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—Å–ª—É–≥: –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, —Ç–µ—Ä–∞–ø–∏—è, –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è."},
#     {"id": 2, "name": "–î–æ–∫—Ç–æ—Ä –°–º–∏—Ä–Ω–æ–≤–∞, –∫–∞—Ä–¥–∏–æ–ª–æ–≥", "description": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è—Ö —Å–µ—Ä–¥—Ü–∞, –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏–∏, –∞—Ä–∏—Ç–º–∏–∏, –∏–Ω—Ñ–∞—Ä–∫—Ç–∞—Ö."},
#     {"id": 3, "name": "–ö–ª–∏–Ω–∏–∫–∞ '–ù–µ–π—Ä–æ–ú–µ–¥'", "description": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–µ—á–µ–Ω–∏–µ –Ω–µ–≤—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π, –º–∏–≥—Ä–µ–Ω–∏, –∏–Ω—Å—É–ª—å—Ç–∞."},
#     {"id": 4, "name": "–î–æ–∫—Ç–æ—Ä –ü–µ—Ç—Ä–æ–≤, –æ—Ä—Ç–æ–ø–µ–¥", "description": "–õ–µ—á–µ–Ω–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∫–æ—Å—Ç–µ–π, —Å—É—Å—Ç–∞–≤–æ–≤, –æ—Å—Ç–µ–æ—Ö–æ–Ω–¥—Ä–æ–∑–∞, –∞—Ä—Ç—Ä–∏—Ç–∞."},
#     {"id": 5, "name": "–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–ª–∏–Ω–∏–∫–∞ '–£–ª—ã–±–∫–∞'", "description": "–õ–µ—á–µ–Ω–∏–µ –∑—É–±–æ–≤, —É–¥–∞–ª–µ–Ω–∏–µ, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—Ä–µ–∫–µ—Ç–æ–≤, –æ—Ç–±–µ–ª–∏–≤–∞–Ω–∏–µ."},
#     {"id": 6, "name": "–î–æ–∫—Ç–æ—Ä –ö—É–∑–Ω–µ—Ü–æ–≤, –ø–µ–¥–∏–∞—Ç—Ä", "description": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –ª–µ—á–µ–Ω–∏–∏ –¥–µ—Ç–µ–π, –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏, –¥–µ—Ç—Å–∫–∏—Ö –∏–Ω—Ñ–µ–∫—Ü–∏—è—Ö."},
#     {"id": 7, "name": "–ì–ª–∞–∑–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ '–û–ø—Ç–∏–∫–ü—Ä–æ'", "description": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–µ—á–µ–Ω–∏–µ –≥–ª–∞–∑–Ω—ã—Ö –±–æ–ª–µ–∑–Ω–µ–π, –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –∑—Ä–µ–Ω–∏—è, –ª–∞–∑–µ—Ä–Ω–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è."},
#     {"id": 8, "name": "–î–æ–∫—Ç–æ—Ä –ë–µ–ª–æ–≤–∞, –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥", "description": "–õ–µ—á–µ–Ω–∏–µ –∫–æ–∂–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π, –∞–∫–Ω–µ, —ç–∫–∑–µ–º—ã, –ø—Å–æ—Ä–∏–∞–∑–∞, –¥–µ—Ä–º–∞—Ç–∏—Ç–∞."},
#     {"id": 9, "name": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä '–ú–†–¢-–ü–ª—é—Å'", "description": "–ú–†–¢, –ö–¢, —Ä–µ–Ω—Ç–≥–µ–Ω, —É–ª—å—Ç—Ä–∞–∑–≤—É–∫–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –∞–Ω–∞–ª–∏–∑—ã."},
#     {"id": 10, "name": "–î–æ–∫—Ç–æ—Ä –°–æ—Ä–æ–∫–∏–Ω, –≥–∞—Å—Ç—Ä–æ—ç–Ω—Ç–µ—Ä–æ–ª–æ–≥", "description": "–õ–µ—á–µ–Ω–∏–µ –∂–µ–ª—É–¥–æ—á–Ω–æ-–∫–∏—à–µ—á–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π, –≥–∞—Å—Ç—Ä–∏—Ç–∞, —è–∑–≤—ã, –¥–∏—Å–±–∞–∫—Ç–µ—Ä–∏–æ–∑–∞."},
#     {"id": 11, "name": "–ö–ª–∏–Ω–∏–∫–∞ '–ù–µ—Ñ—Ä–æ–ú–µ–¥'", "description": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–µ—á–µ–Ω–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–æ—á–µ–∫, –º–æ—á–µ–∫–∞–º–µ–Ω–Ω–æ–π –±–æ–ª–µ–∑–Ω–∏."},
#     {"id": 12, "name": "–î–æ–∫—Ç–æ—Ä –û—Ä–ª–æ–≤, —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥", "description": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –¥–∏–∞–±–µ—Ç–µ, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è—Ö —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã, –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö."},
#     {"id": 13, "name": "–§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä '–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è'", "description": "–ú–∞—Å—Å–∞–∂, –õ–§–ö, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ç—Ä–∞–≤–º, —Ñ–∏–∑–∏–æ–ø—Ä–æ—Ü–µ–¥—É—Ä—ã."},
#     {"id": 14, "name": "–î–æ–∫—Ç–æ—Ä –í–∞—Å–∏–ª—å–µ–≤, –Ω–µ–≤—Ä–æ–ª–æ–≥", "description": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–µ—á–µ–Ω–∏–µ –Ω–µ—Ä–≤–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π, –¥–µ–ø—Ä–µ—Å—Å–∏–∏, –±–µ—Å—Å–æ–Ω–Ω–∏—Ü—ã, –ø–∞–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫."},
#     {"id": 15, "name": "–ê–∫—É—à–µ—Ä-–≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä '–ú–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–æ'", "description": "–í–µ–¥–µ–Ω–∏–µ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏, —Ä–æ–¥–æ–≤—Å–ø–æ–º–æ–∂–µ–Ω–∏–µ, –∂–µ–Ω—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ."},
#     {"id": 16, "name": "–î–æ–∫—Ç–æ—Ä –ö—Ä–∞–≤—Ü–æ–≤–∞, –∞–ª–ª–µ—Ä–≥–æ–ª–æ–≥", "description": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–µ—á–µ–Ω–∏–µ –∞–ª–ª–µ—Ä–≥–∏–π, –±—Ä–æ–Ω—Ö–∏–∞–ª—å–Ω–æ–π –∞—Å—Ç–º—ã, –∫–æ–∂–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π."},
#     {"id": 17, "name": "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä '–û—Å—Ç–µ–æ–ü–ª—é—Å'", "description": "–õ–µ—á–µ–Ω–∏–µ –æ–ø–æ—Ä–Ω–æ-–¥–≤–∏–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∞–ø–ø–∞—Ä–∞—Ç–∞, –º–∞–Ω—É–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è, –æ—Ä—Ç–æ–ø–µ–¥–∏—è."},
#     {"id": 18, "name": "–î–æ–∫—Ç–æ—Ä –§–µ–¥–æ—Ä–æ–≤, –æ–Ω–∫–æ–ª–æ–≥", "description": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–µ—á–µ–Ω–∏–µ –æ–Ω–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏, —Ö–∏–º–∏–æ—Ç–µ—Ä–∞–ø–∏—è."},
#     {"id": 19, "name": "–¶–µ–Ω—Ç—Ä –ø—Å–∏—Ö–∏–∞—Ç—Ä–∏–∏ –∏ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏ '–ù–µ–π—Ä–æ–ë–∞–ª–∞–Ω—Å'", "description": "–õ–µ—á–µ–Ω–∏–µ —Ç—Ä–µ–≤–æ–∂–Ω—ã—Ö —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤, –¥–µ–ø—Ä–µ—Å—Å–∏–∏, –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è, –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è —Ç–µ—Ä–∞–ø–∏—è."}
# ]


# # –°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ Annoy
# for item in data:
#     vector = model.encode(item["description"])
#     annoy_index.add_item(item["id"], vector)

# # –°—Ç—Ä–æ–∏–º 10 –¥–µ—Ä–µ–≤—å–µ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
# annoy_index.build(10)

# @app.get("/search/")
# async def search(query: str = Query(..., description="–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å")):
#     query_vector = model.encode(query)
    
#     # –ò—â–µ–º 3 –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
#     nearest_neighbors = annoy_index.get_nns_by_vector(query_vector, 3, include_distances=True)
    
#     results = [{"id": i, "name": data[i]["name"],"description":data[i]["description"], "distance": d} for i, d in zip(*nearest_neighbors)]
#     return {"query": query, "results": results}


from fastapi import FastAPI, Query
from annoy import AnnoyIndex
from sentence_transformers import SentenceTransformer
import numpy as np
import pickle
import os
from sklearn.preprocessing import normalize

app = FastAPI()

# ‚úÖ –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ (–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –º–æ–¥–µ–ª–∏!)
VECTOR_DIMENSION = 384  # "all-MiniLM-L6-v2"
METRIC = 'angular'  # –ö–æ—Å–∏–Ω—É—Å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ

# ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º NLP-–º–æ–¥–µ–ª—å (–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É)
# MODEL_NAME = "sentence-transformers/all-MiniLM-L6-v2"  # ‚úÖ –õ–µ–≥–∫–∞—è –∏ –±—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å

MODEL_NAME = "sentence-transformers/multi-qa-mpnet-base-dot-v1"  # üî¥ –°–∏–ª—å–Ω–µ–µ, –Ω–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ

model = SentenceTransformer(MODEL_NAME)

# ‚úÖ –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å Annoy
annoy_index = AnnoyIndex(VECTOR_DIMENSION, METRIC)

# ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–∞—á–µ–π –∏ –∫–ª–∏–Ω–∏–∫
data = [
    {"id": 0, "name": "–î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤, —Ç–µ—Ä–∞–ø–µ–≤—Ç", 
     "description": "–õ–µ—á–∏—Ç –ø—Ä–æ—Å—Ç—É–¥—É, –≥—Ä–∏–ø–ø, –û–†–í–ò, –∞–Ω–≥–∏–Ω—É, –±—Ä–æ–Ω—Ö–∏—Ç. –°–µ–º–µ–π–Ω—ã–π –≤—Ä–∞—á, —Ç–µ—Ä–∞–ø–∏—è, –ø–Ω–µ–≤–º–æ–Ω–∏—è."},

    {"id": 1, "name": "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä '–ó–¥–æ—Ä–æ–≤—å–µ'", 
     "description": "–ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—Å–ª—É–≥: –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, —Ç–µ—Ä–∞–ø–∏—è, –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è, —á–µ–∫–∞–ø."},

    {"id": 2, "name": "–î–æ–∫—Ç–æ—Ä –°–º–∏—Ä–Ω–æ–≤–∞, –∫–∞—Ä–¥–∏–æ–ª–æ–≥", 
     "description": "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—ã–º –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º: –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—è, –∞—Ä–∏—Ç–º–∏—è, –∏–Ω—Ñ–∞—Ä–∫—Ç, –∏—à–µ–º–∏—è."},

    {"id": 3, "name": "–ö–ª–∏–Ω–∏–∫–∞ '–ù–µ–π—Ä–æ–ú–µ–¥'", 
     "description": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–µ—á–µ–Ω–∏–µ –Ω–µ–≤—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π: –º–∏–≥—Ä–µ–Ω–∏, –∏–Ω—Å—É–ª—å—Ç, —ç–ø–∏–ª–µ–ø—Å–∏—è, –Ω–µ—Ä–≤—ã."},

    {"id": 4, "name": "–î–æ–∫—Ç–æ—Ä –ü–µ—Ç—Ä–æ–≤, –æ—Ä—Ç–æ–ø–µ–¥", 
     "description": "–õ–µ—á–µ–Ω–∏–µ —Å—É—Å—Ç–∞–≤–æ–≤, –∞—Ä—Ç—Ä–∏—Ç, —Ä–µ–≤–º–∞—Ç–∏–∑–º, –ø–æ–∑–≤–æ–Ω–æ—á–Ω–∏–∫, –æ—Å—Ç–µ–æ—Ö–æ–Ω–¥—Ä–æ–∑, —Ç—Ä–∞–≤–º—ã, —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è."},

    {"id": 5, "name": "–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–ª–∏–Ω–∏–∫–∞ '–£–ª—ã–±–∫–∞'", 
     "description": "–õ–µ—á–µ–Ω–∏–µ –∑—É–±–æ–≤, –æ—Ä—Ç–æ–¥–æ–Ω—Ç–∏—è, —É–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–æ–≤, –±—Ä–µ–∫–µ—Ç—ã, –∏–º–ø–ª–∞–Ω—Ç—ã, –ø—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ."},

    {"id": 6, "name": "–î–æ–∫—Ç–æ—Ä –ö—É–∑–Ω–µ—Ü–æ–≤, –ø–µ–¥–∏–∞—Ç—Ä", 
     "description": "–î–µ—Ç—Å–∫–∏–π –≤—Ä–∞—á, –ª–µ—á–∏—Ç –û–†–í–ò, –ø—Ä–∏–≤–∏–≤–∫–∏, –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–º–∏, –≤–∏—Ä—É—Å–Ω—ã–µ –∏–Ω—Ñ–µ–∫—Ü–∏–∏."},

    {"id": 7, "name": "–ì–ª–∞–∑–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ '–û–ø—Ç–∏–∫–ü—Ä–æ'", 
     "description": "–õ–µ—á–µ–Ω–∏–µ –≥–ª–∞–∑–Ω—ã—Ö –±–æ–ª–µ–∑–Ω–µ–π, –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –∑—Ä–µ–Ω–∏—è, –∫–∞—Ç–∞—Ä–∞–∫—Ç–∞, –ª–∞–∑–µ—Ä–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è, –±–ª–∏–∑–æ—Ä—É–∫–æ—Å—Ç—å."},

    {"id": 8, "name": "–î–æ–∫—Ç–æ—Ä –ë–µ–ª–æ–≤–∞, –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥", 
     "description": "–õ–µ—á–µ–Ω–∏–µ –∫–æ–∂–∏, –∞–∫–Ω–µ, —ç–∫–∑–µ–º–∞, –ø—Å–æ—Ä–∏–∞–∑, –¥–µ—Ä–º–∞—Ç–∏—Ç, –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è, –∞–ª–ª–µ—Ä–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∞–∫—Ü–∏–∏."},

    {"id": 9, "name": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä '–ú–†–¢-–ü–ª—é—Å'", 
     "description": "–ú–†–¢, –ö–¢, —Ä–µ–Ω—Ç–≥–µ–Ω, —É–ª—å—Ç—Ä–∞–∑–≤—É–∫–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –∞–Ω–∞–ª–∏–∑—ã, —á–µ–∫–∞–ø."},

    {"id": 10, "name": "–î–æ–∫—Ç–æ—Ä –û—Ä–ª–æ–≤, —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥", 
     "description": "–õ–µ—á–µ–Ω–∏–µ –¥–∏–∞–±–µ—Ç–∞, –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è, —â–∏—Ç–æ–≤–∏–¥–Ω–∞—è –∂–µ–ª–µ–∑–∞, –æ–∂–∏—Ä–µ–Ω–∏–µ, –º–µ—Ç–∞–±–æ–ª–∏–∑–º."}
]

# ‚úÖ **–ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å Annoy**
EMBEDDING_FILE = "embeddings.ann"

if os.path.exists(EMBEDDING_FILE):
    print("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–∏...")
    annoy_index.load(EMBEDDING_FILE)
else:
    print("‚öôÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–∏...")
    for item in data:
        vector = model.encode(item["description"])
        vector = normalize([vector])[0]  # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
        annoy_index.add_item(item["id"], vector)
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω {item['name']}")

    annoy_index.build(100)  # –ë–æ–ª—å—à–µ –¥–µ—Ä–µ–≤—å–µ–≤ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
    annoy_index.save(EMBEDDING_FILE)
    print("‚úÖ –≠–º–±–µ–¥–¥–∏–Ω–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

# ‚úÖ **–û—Ç–ª–∞–¥–∫–∞: –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ**
print("üìä –í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ Annoy:", annoy_index.get_n_items())

# ‚úÖ **–ü–æ–∏—Å–∫**
@app.get("/search/")
async def search(query: str = Query(..., description="–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å")):
    
    query_vector = model.encode(query)
    query_vector = normalize([query_vector])[0]  # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
    

    # ‚úÖ –í—ã–≤–æ–¥–∏–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    print(f"\nüîç –ó–∞–ø—Ä–æ—Å: {query}")
    print(f"üß† –í–µ–∫—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞: {query_vector[:5]}...")  # –í—ã–≤–µ–¥–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5 –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

    # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Annoy –Ω–µ –ø—É—Å—Ç–æ–π
    if annoy_index.get_n_items() == 0:
        return {"error": "Annoy Index –ø—É—Å—Ç. –ü–µ—Ä–µ—Å–æ–∑–¥–∞–π—Ç–µ –∏–Ω–¥–µ–∫—Å."}

    # ‚úÖ –ò—â–µ–º –±–ª–∏–∂–∞–π—à–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    nearest_neighbors = annoy_index.get_nns_by_vector(query_vector, 5, include_distances=True)

    print("üîé –ù–∞–π–¥–µ–Ω–Ω—ã–µ ID:", nearest_neighbors[0])
    print("üìè –î–∏—Å—Ç–∞–Ω—Ü–∏–∏:", nearest_neighbors[1])

    # ‚úÖ –§–∏–ª—å—Ç—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (—É–±–µ—Ä–∏ `if d < 0.5`, –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞–ª–æ)
    results = [
        {"id": i, "name": data[i]["name"], "description": data[i]["description"], "distance": d}
        for i, d in zip(*nearest_neighbors)  # –†–∞—Å—à–∏—Ä–∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω
    ]

    return {"query": query, "results": results}
